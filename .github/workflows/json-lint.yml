name: JSON Lint and Format

on:
  push:
    paths:
      - '**/*.json'
  pull_request:
    paths:
      - '**/*.json'

jobs:
  lint-and-format:
    if: github.actor != 'github-actions[bot]'
    runs-on: ubuntu-latest
    name: Lint, Format, and Fix Dependencies for JSON Files

    steps:
      # 1. Checkout Repository with Full History
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history to allow pushing commits

      # 2. Set Up Node.js Environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'  # Specify the Node.js version

      # 3. Install Dependencies
      - name: Install Dependencies
        run: npm install

      # 4. Fix Vulnerabilities
      - name: Fix Vulnerabilities
        run: npm audit fix --force
        continue-on-error: true  # Continue even if some fixes fail

      # 5. Format JSON Files with Prettier
      - name: Format JSON Files with Prettier
        run: npm run format

      # 6. Validate JSON Syntax with JSONLint
      - name: Validate JSON Syntax with JSONLint
        run: npm run lint

      # 7. Check for Changes After Formatting
      - name: Check for changes
        id: git-check
        run: |
          if ! git diff --quiet; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      # 8. Commit Formatted JSON Files if Changes Exist
      - name: Commit formatted JSON files
        if: steps.git-check.outputs.changed == 'true'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add '**/*.json'
          git commit -m "chore: format JSON files with Prettier"

      # 9. Push Changes Back to the Repository
      - name: Push changes
        if: steps.git-check.outputs.changed == 'true'
        uses: ad-m/github-push-action@v0.6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}
